<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bnt_ToMetrical" xml:space="preserve">
    <value>Metrical</value>
  </data>
  <data name="btn_Excel" xml:space="preserve">
    <value>To Excel</value>
  </data>
  <data name="btn_Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="btn_Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="btn_Preferences" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="btn_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="btn_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="btn_Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="btn_ToImperial" xml:space="preserve">
    <value>Imperial(UK)</value>
  </data>
  <data name="common_apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="common_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="common_error" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="critical_recorder_error" xml:space="preserve">
    <value>Error of critical recorder</value>
  </data>
  <data name="dlg_CS_btn_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="dlg_CS_btn_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="dlg_CS_cb_AltFeets" xml:space="preserve">
    <value>Altitude in feets</value>
  </data>
  <data name="dlg_CS_cb_ExcelSelectedOnly" xml:space="preserve">
    <value>Copy into Excel only selected fields</value>
  </data>
  <data name="dlg_CS_cb_Filters" xml:space="preserve">
    <value>Use filters</value>
  </data>
  <data name="dlg_CS_cb_Outlier" xml:space="preserve">
    <value>Outliers filter</value>
  </data>
  <data name="dlg_CS_g_Filters" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="dlg_CS_lbl_ConnectionTimeout" xml:space="preserve">
    <value>Connection timeout, ms:</value>
  </data>
  <data name="dlg_CS_lbl_Delay" xml:space="preserve">
    <value>Request delay, ms:</value>
  </data>
  <data name="dlg_CS_lbl_DelayNote" xml:space="preserve">
    <value>If delay is 0 next request will be send after previous will be completed</value>
  </data>
  <data name="dlg_CS_lbl_Interpolation" xml:space="preserve">
    <value>Interpolation interval, ms:</value>
  </data>
  <data name="dlg_CS_Title" xml:space="preserve">
    <value>Data capture settings</value>
  </data>
  <data name="dlg_GS_cb_AddGrid" xml:space="preserve">
    <value>Additional grid on</value>
  </data>
  <data name="dlg_GS_cb_AxisColor" xml:space="preserve">
    <value>Axis colors are same as curves</value>
  </data>
  <data name="dlg_GS_cb_MainGrid" xml:space="preserve">
    <value>Main grid on</value>
  </data>
  <data name="dlg_GS_cb_UseSmoothing" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="dlg_GS_g_Grid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="dlg_GS_g_Smoothing" xml:space="preserve">
    <value>Smoothing</value>
  </data>
  <data name="dlg_GS_lbl_Font" xml:space="preserve">
    <value>Font size:</value>
  </data>
  <data name="dlg_GS_Title" xml:space="preserve">
    <value>Graphs preferences</value>
  </data>
  <data name="dlg_Help_Content" xml:space="preserve">
    <value>How to use:
- Press Start or F9 to begin data collection in battle/test flight. Before you start check "Altitude in feets" setting;

- To finish collection press Stop or F10

- For data copying into Excel press appropriate button or use Ctrl+C/Ctrl+V.

- PREFERENCES: At data collection preferences it is possible to add or remove input data filters. They blocks collection of data from fields with same names. Exact names you can check at http://127.0.0.1:8111/indicators and http://127.0.0.1:8111/state. Saving of filters list now is not available but it's possible to change Filters.xml as you wish. It is possible to change requests interval and interpolation interval. Request interval will be used at next data collection,
interpolation interval changing will cause recalculation of data after Apply pressed. Also you can set which data to copy to Excel - all cells or only selected. Outliers filter(filtering of extremal values) is not working now. 

"Altitude in feets" - by default altitude unit is meter but for most of UK planes web-map show altitude in feets, for proper calculations set this checkbox on.

- METRICAL and IMPERIAL(UK) - units conversion

- GRAPHS in fact, are better to build in Excel, but for quick analysis they can be built right in app:
Setting axis is available only after data was collected. To build graphs select X-Axis at dropdown and Y-Axis by checkboxes

- GRAPHS PREFERENCES - On/off curve smoothing, setting up smoothing interval. Without smoothing graphs will be built from raw data. Also there is some interface settings.

- SAVE - save all data and graphs

- LOAD - open saved data and graphs</value>
  </data>
  <data name="lbl_Ordinata" xml:space="preserve">
    <value>Y-Axis:</value>
  </data>
  <data name="lbl_Params" xml:space="preserve">
    <value>Data to show</value>
  </data>
  <data name="recorder_failed" xml:space="preserve">
    <value>Collection failed</value>
  </data>
  <data name="save_error" xml:space="preserve">
    <value>No data to save</value>
  </data>
  <data name="state_collecting" xml:space="preserve">
    <value>Data collection in progress. Press Stop or F10 to finish.</value>
  </data>
  <data name="state_failed" xml:space="preserve">
    <value>Data collection finished with errors. Press start or F9 to collect new data.</value>
  </data>
  <data name="state_recorder_failed_format" xml:space="preserve">
    <value>Recorder {0} finished collection with error: {1}</value>
  </data>
  <data name="state_success" xml:space="preserve">
    <value>Data collection finished successfully! Press Start or F9 to collect new data.</value>
  </data>
  <data name="tab_Data" xml:space="preserve">
    <value>Capture</value>
  </data>
  <data name="tab_Graph" xml:space="preserve">
    <value>Graphs</value>
  </data>
  <data name="tab_Measures" xml:space="preserve">
    <value>Measures</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>WTParser v1.1.1</value>
  </data>
  <data name="dlg_GS_lbl_SmoothLevel" xml:space="preserve">
    <value>Level of smoothing, pixels:</value>
  </data>
  <data name="dlg_GS_cb_AxisLbl" xml:space="preserve">
    <value>Axis titles</value>
  </data>
  <data name="dlg_GS_cb_ShowLegend" xml:space="preserve">
    <value>Show legend</value>
  </data>
  <data name="dlg_GS_g_Legend" xml:space="preserve">
    <value>Legend</value>
  </data>
  <data name="btn_Compare_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="btn_Compare_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="tab_Compare" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="lbl_Compare_Sources" xml:space="preserve">
    <value>Sources:</value>
  </data>
  <data name="lbl_Abscissa" xml:space="preserve">
    <value>X-Axis:</value>
  </data>
</root>